import { defineNuxtModule, addPlugin, createResolver, addTypeTemplate, addTemplate } from "@nuxt/kit"
import extractTsTypes from "./extractTsTypes"
import { MockConfigItem, FlatTypesRegistry, TypeConfigItem } from "./runtime/nuxtMockerTypes"

export interface ModuleOptions {
  useMocks: boolean;
  mocks: MockConfigItem[];
  typeConfig: TypeConfigItem[];
  types: FlatTypesRegistry;
  factoriesPath: string;
}

export default defineNuxtModule<ModuleOptions>({
  meta: {
    name: 'nuxtMocker',
    configKey: 'nuxtMocker'
  },
  // Default configuration options of the Nuxt module
  defaults: {
    useMocks: false,
    mocks: [],
    typeConfig: [],
    types: {},
    factoriesPath:  '../../../../factories'
  } as ModuleOptions,
  async setup ({ useMocks, mocks: rawMocks, typeConfig, factoriesPath }: ModuleOptions, nuxt) {
    addTypeTemplate({
      filename: 'types/nuxt-mocker-mockable-types.d.ts',
      getContents: () => `// Generated by nuxt-mocker
type Words = string;
type Word = string;
type PlainLongString = string;
type HtmlLongString = string;
type AbsolutePath = string;
type RelativePath = string;
type FirstName = string;
type LastName = string;
type FullName = string;
type StreetAddress = string;
type PostalCode = string;
type City = string;
type CountryCode = string;
type Country = string;
type Latitude = number;
type Longitude = number;
type Int = number;
type Float = number;
type ImageSrc = string;
type PhoneNumber = string;
`
    })
    if (useMocks) {
      const types: FlatTypesRegistry = await extractTsTypes()
      const mocks: MockConfigItem[] = rawMocks.map(
        (mock) => {
          return {
            ...mock,
            collectionMinLength: mock.collectionMinLength || 1,
            collectionMaxLength: mock.collectionMaxLength || 3,
            probabilityPercent: mock.probabilityPercent || 100,
          }
        },
        []
      )
      nuxt.options.runtimeConfig = {
        ...nuxt.options.runtimeConfig,
        public: {
          ...nuxt.options.runtimeConfig.public,
          nuxtMocker: {
            mocks,
            typeConfig,
            // @ts-ignore
            types,
            factoriesPath
          }
        }
      }
      const { resolve } = createResolver(import.meta.url)
      addPlugin({
        src: resolve('./runtime/nuxt-mocker-plugin'),
        mode: 'all'
      })
      addTemplate({
        filename: 'factories/index.ts',
        getContents: () => 'export default {}'
      })
    }
  }
})
